services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "3500:3500"
    environment:
      ZOOKEEPER_CLIENT_PORT: 3500
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped

  broker:
    image: confluentinc/cp-kafka:latest
    hostname: broker
    container_name: broker
    links:
      - zookeeper
    ports:
      - "3501:3501"
    #      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:3500"
      KAFKA_ADVERTISED_LISTENERS: "EXTERNAL://localhost:3501,PLAINTEXT://broker:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_LISTENERS: "EXTERNAL://0.0.0.0:3501,PLAINTEXT://0.0.0.0:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 100000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 100000000
    restart: unless-stopped

  schema_registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema_registry
    container_name: schema-registry
    links:
      - zookeeper
      - broker
    ports:
      - "3502:3502"
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:3502"
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:3500"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://broker:9092"
    restart: unless-stopped

  postgres:
    image: postgres:9.6
    hostname: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: TRIAL_ADMIN
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  ost_api:
    hostname: ost_api
    container_name: ost_api
    build:
      context: .
      dockerfile: Dockerfile.backend
    links:
      - postgres
    ports:
      - "8080:8080"
      - "8000:8000"
    environment:
      - OST_DB_HOST=postgres
      - OST_DB_PORT=5432
      - OST_DB_NAME=TRIAL_ADMIN
      - OST_DB_USER=postgres
      - OST_DB_PASSWORD=postgres
      - OST_ADMIN_PASSWORD=zaq1@WSX
      - DRIVER_IS_TESTBED_ON=true
    volumes:
      - ./_config/server.xml:/usr/local/tomcat/conf/server.xml
      - ./_config/catalina.sh:/usr/local/tomcat/bin/catalina.sh
      - ./_config/setenv.sh:/usr/local/tomcat/bin/setenv.sh

  ost_web:
    hostname: ost_web
    container_name: ost_web
    image: drivereu/ost_frontend:without_keycloak
#    build:
#      context: .
#      dockerfile: Dockerfile.frontend
    links:
      - postgres
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./_config/certificates:/usr/share/certificates
      - ./_config/itti-app.conf:/etc/nginx/conf.d/itti-app.conf

volumes:
  database-OST:
  postgres-data:
  trial-data:
