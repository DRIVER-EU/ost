version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.0.0
    hostname: zookeeper
    ports:
      - "3500:3500"
    environment:
      ZOOKEEPER_CLIENT_PORT: 3500
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:5.0.0
    hostname: broker
    depends_on:
      - zookeeper
    ports:
      - "3501:3501"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:3500'
      KAFKA_ADVERTISED_LISTENERS: 'EXTERNAL://localhost:3501,PLAINTEXT://broker:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_LISTENERS: 'EXTERNAL://0.0.0.0:3501,PLAINTEXT://0.0.0.0:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 100000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 100000000

  schema_registry:
    image: confluentinc/cp-schema-registry:5.0.0
    hostname: schema_registry
    depends_on:
      - zookeeper
      - broker
    ports:
      - "3502:3502"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:3502'
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:3500'
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://broker:9092'

  kafka_rest:
    image: confluentinc/cp-kafka-rest:5.0.0
    hostname: kafka_rest
    depends_on:
      - zookeeper
      - schema_registry
      - broker
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_HOST_NAME: kafka_rest
      KAFKA_REST_BOOTSTRAP_SERVERS: 'PLAINTEXT://broker:9092'
      KAFKA_REST_ZOOKEEPER_CONNECT: 'zookeeper:3500'
      KAFKA_REST_LISTENERS: 'http://0.0.0.0:8082'
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema_registry:3502'
      KAFKA_CONSUMER_REQUEST_TIMEOUT_MS: 30000
      KAFKA_REST_ACCESS_CONTROL_ALLOW_METHODS: 'GET,POST,PUT,DELETE,OPTIONS'
      KAFKA_REST_ACCESS_CONTROL_ALLOW_ORIGIN: '*'

  pgadmin:
    image: fenglc/pgadmin4
    depends_on:
      - postgres
    ports:
        - "5050:5050"
    restart: unless-stopped

  postgres:
    image: postgres:9.6
    hostname: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: TRIAL_ADMIN
    volumes:
       - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  admintool:
    image: drivereu/test-bed-admin:latest
    depends_on:
      - postgres
      - broker
      - schema_registry
    ports:
      - "8090:8090"
    volumes:
      - ./admintool-config/gateways.json:/opt/application/config/gateways.json
      - ./admintool-config/solutions.json:/opt/application/config/solutions.json
      - ./admintool-config/topics.json:/opt/application/config/topics.json
      - ./admintool-config/standards.json:/opt/application/config/standards.json
    environment:
      KAFKA_BROKER_URL: broker:9092
      SCHEMA_REGISTRY_URL: http://schema_registry:3502
      zookeeper_host: zookeeper
      zookeeper_port: 3500
      schema_registry_url: http://schema_registry:3502
      testbed_secure_mode: 'DEVELOP'
      testbed_init_auto: 'false'
      reset_db: 'true'
      management_ca_cert_path: http://localhost:9090
      cert_handler_url: https://localhost:8443
      cert_pem_handler_url: https://localhost:8443
      security_rest_path_group: https://localhost:9443
      security_rest_path_topic: https://localhost:9443

  time_service:
    image: drivereu/test-bed-time-service:latest
    depends_on:
      - broker
      - schema_registry
    ports:
      - "8100:8100"
    environment:
      KAFKA_BROKER_URL: broker:9092
      SCHEMA_REGISTRY_URL: http://schema_registry:3502
      AUTO_REGISTER_SCHEMAS: 'true'

  itti_db: 
    image: drivereu/ost-app:ost_database
    ports:
    - "5437:5432"
    volumes:
    - ost-database:/var/lib/postgresql/data
    restart: always

  itti_web:
    image: drivereu/ost-app:itti_frontend
    links:
    - itti_api
    ports:
    - "84:80"
    - "443:443"
    restart: always

  itti_api:
    image: drivereu/ost-app:itti_backend
    environment:
      KAFKA_BROKER_URL: broker:9092
    links:
    - itti_db
    ports:
    - "8084:8080"
    restart: always

volumes:
  ost-database:
  postgres-data:
